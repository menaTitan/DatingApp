{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_resolvers/member-detailed.resover.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-details/member-details.component.ts","./src/app/members/member-details/member-details.component.html","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/environments/environment.prod.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] =  [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n\n  get404Error(){\n     this.http.get(this.baseUrl + 'buggy/not-found').subscribe( resp => {\n        console.log(resp);\n     }, error =>{\n        console.log(error);\n     })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe( resp => {\n       console.log(resp);\n    }, error =>{\n       console.log(error);\n    })\n }\n\n get500Error(){\n  this.http.get(this.baseUrl + 'buggy/server-error').subscribe( resp => {\n     console.log(resp);\n  }, error =>{\n     console.log(error);\n  })\n}\n\nget401Error(){\n  this.http.get(this.baseUrl + 'buggy/auth').subscribe( resp => {\n     console.log(resp);\n  }, error =>{\n     console.log(error);\n  })\n}\n\nget400ValidationError(){\n  this.http.post(this.baseUrl + 'account/register', {}).subscribe( resp => {\n     console.log(resp);\n  }, error =>{\n     console.log(error);\n     this.validationErrors = error;\n  })\n}\n}\n","<ng-container>\n    <button (click)=\"get500Error()\"class=\"btn btn-outline-primary mr-2\" > test 500 Error</button>\n    <button (click)=\"get400Error()\"class=\"btn btn-outline-primary mr-2\" > test 400 Error</button>\n    <button (click)=\"get401Error()\"class=\"btn btn-outline-primary mr-2\" > test 401 Error</button>\n    <button (click)=\"get404Error()\"class=\"btn btn-outline-primary mr-2\" > test 404 Error</button>\n    <button (click)=\"get400ValidationError()\"class=\"btn btn-outline-primary mr-2\" > test 400 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"list-group\">\n            <li  class=\"list-group-item list-group-item-danger\" *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n\n    </div>\n</ng-container>\n","<div class=\"form-group\">\n    <input type=\"text\" [class.is-invalid]='ngControl.touched && ngControl.invalid' class='form-control'\n    [formControl]='ngControl.control'\n    placeholder=\"{{label}}\"\n    bsDatepicker\n    [bsConfig]='bsConfig'\n    [maxDate]='maxDate'\n    >\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>; \n\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n\n    }\n  }\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n\n  }\n  registerOnTouched(fn: any): void {\n\n  }\n\n\n  \n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n \n  //@Input() usersFromHomeComponent: any; // getting data from the parent component\n  @Output() cancelRegister = new EventEmitter() //passing data to child to the parent component\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = []; \n  constructor(private accountService: AccountService, private toastr: ToastrService, \n    private fb: FormBuilder, private router: Router ) { }\n  ngOnInit(): void {\n    this.intitializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  intitializeForm(){\n    this.registerForm = this.fb.group({\n      gender:      ['male'],\n      username:    ['', Validators.required],\n      knownAs:     ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city:        ['', Validators.required],\n      country:     ['', Validators.required],\n      password:    ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n\n    this.registerForm.controls.password.valueChanges.subscribe(()=>{\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    })\n  }\n\n  // creating custom validator \n  matchValues(matchTo: string): ValidatorFn{\n      return(control: AbstractControl) =>{\n        //control?.value is the confirmPassword control \n        return control?.value === control?.parent?.controls[matchTo].value ? null : {isMatching: true}\n      }\n  }\n  register(){\n    console.log(this.registerForm.value);\n      this.accountService.register(this.registerForm.value).subscribe(response =>{\n          this.router.navigateByUrl('/members')\n      }, error =>{\n          this.validationErrors = error;\n      });\n      console.log(this.registerForm.value);\n      \n  }\n\n  cancel(){\n    this.cancelRegister.emit(false);\n  }\n\n}\n","\n<div class=\"container mt-5\">\n    <form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n        <h2 class=\"text-center text-primary\"> Sign up</h2>\n        <hr>\n        <div class=\"form-group\">\n            <label class=\"control-label\" style=\"margin-right: 10px;\">I am a:</label>\n            <label class=\"radio-inline\"><input type=\"radio\" value=\"male\" formControlName='gender'> Male</label>\n            <label class=\"radio-inline\"><input type=\"radio\" value=\"female\" formControlName='gender' class=\"ml-3\"> Female</label>\n        </div>\n        <app-text-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"knownAs\"'></app-text-input>\n        <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [label]='\"dateOfBirth\"' [maxDate]='maxDate'></app-date-input>\n        <app-text-input [formControl]='registerForm.controls[\"city\"]' [label]='\"city\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"country\"]' [label]='\"country\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"password\"]' [label]='\"password\"' [type]='\"password\"'></app-text-input>\n        <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"' [type]='\"password\"'></app-text-input>\n        \n        <div class=\"row \" *ngIf=\"validationErrors.length > 0\">\n            <ul class=\"text-danger\">\n                <li *ngFor=\"let error of validationErrors\">\n                    {{error}}\n                </li>\n            </ul>\n    \n        </div>\n        \n        <div class=\"form-group text-center\">\n            <button [disabled]='!registerForm.valid' class=\"btn btn-success my-2\" type=\"submit\"> Register</button>\n            <button class=\"btn btn-secondary my-2\" (click)=\"cancel()\" type=\"button\"> Cancel</button>\n        </div>\n    </form>\n    \n    <p> form value: {{registerForm.value | json}}</p>\n    <p> form value: {{registerForm.status| json}}</p>\n</div>\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0 \">\n            No messages yet.. say hi by using the message box below\n        </div>\n        <ul #scrolMe style=\"overflow:scroll; height:500px;\" [scrollTop]=\"scrolMe.scrollHeight\"\n            *ngIf=\"(messageService.messageThread$ | async)?.length > 0\" >\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-img float-right\">\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                        alt={{message.senderUsername}}>\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead && message.senderUsername !== username\">\n                                    (unread)\n                                </span>\n                                <span class=\"text-success\" *ngIf=\"message.dateRead && message.senderUsername !== username\">\n                                    (read {{message.dateRead | timeago}})\n                                </span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input\n                 name=\"messageContent\"\n                 required\n                 [(ngModel)]=\"messageContent\"\n                 type=\"text\" \n                 class=\"form-control input-sm\" \n                 placeholder=\"Send a private message\">\n                <div class=\"input-group-append\">\n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n @ViewChild(\"messageForm\") messageForm: NgForm\n @Input() messages: Message[];\n @Input() username: string;\n messageContent: string;\n\n  constructor(public  messageService : MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage(){\n    this.messageService.sendMessage(this.username, this.messageContent).then(() =>{\n      this.messageForm.reset();\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1> Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink=\"/\"> Return to home Page</button>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient, JsonpClientBackend} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\nimport { PresenceService } from './presence.service';\n// services are singlton \n// injectable mean that this servie can be injected into other components or other services in our application\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource  = new ReplaySubject<User>(1); // 1 indicate the size of the buffer. We only need one user\n  currentUser$ = this.currentUserSource.asObservable();\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model:any){\n      return this.http.post(`${this.baseUrl}account/login`, model).pipe(\n        map((response : User) =>{\n            const user = response;\n            if(user){\n               this.setCurrentUser(user);\n               this.presence.createHubConnection(user);\n            }\n            return user;\n        })\n      )\n  }\n\n  register(model: any){\n      return this.http.post(this.baseUrl + 'account/register', model).pipe(\n        map((user : User)=> {\n            if(user){\n               this.setCurrentUser(user);\n               this.presence.createHubConnection(user);\n            }\n            return user;\n        })\n      )\n  }\n\n  setCurrentUser(user : User){\n    user.roles = [];\n    const roles = this.getDecoderToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecoderToken(token: string){\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","<h4>Intranal srver error - refreshing the page will make the error disappear!</h4>\n\n\n<ng-container *ngIf=\"error\">  \n    <h5 class=\"text-danger\"> Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: if you are seeing this then Angular is probably not to be blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li> Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li> Reproduce the error in postman - if we see the same response, then the issue is not with angular</li>\n    </ol>\n\n    <p>Following is the stack trace - this is where you investagation should start!</p>\n    <div class=\"mt-5 text-danger\" style=\"background-color: whitesmoke;\">{{error.details}}</div>\n</ng-container>","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n  constructor(private router: Router) {\n      const navigation = this.router.getCurrentNavigation();\n      this.error = navigation?.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { map, take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' //*appHasRole='[\"Admin\"]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, \n    private accountService: AccountService) { \n        this.accountService.currentUser$.pipe(take(1)).subscribe( user => {\n            this.user = user;\n            \n        })\n    }\n  ngOnInit(): void {\n    //clear the view if no roles\n    if(!this.user?.roles || this.user == null){\n        this.viewContainerRef.clear();\n        return;\n    }\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }else{\n      // do not show the admin link\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n  constructor(private spinnerService : NgxSpinnerService) { }\n\n  busy(){\n    this.busyRequestCount ++;\n    this.spinnerService.show(undefined, {\n      type:'line-scale-party',\n      bdColor:'rgba(255,255,255,0)',\n      color:'#333333'\n    })\n  }\n\n  idle(){\n    this.busyRequestCount--;\n    if(this.busyRequestCount <= 0){\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  users : any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    //this.getUsers();\n  }\n\n  regiserToggle(){\n     this.registerMode = !this.registerMode;\n  }\n\n  getUsers(){\n    this.http.get(environment.apiUrl+'users').subscribe(users => {\n      this.users = users;\n\n    }, error=>{\n      console.log(error);\n    })\n  }\n\n  cancelRegisterMode(event : boolean){\n    this.registerMode = event;\n    console.log(`got the data from the child component ${this.registerMode}`)\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\"  style=\"text-align: center;\">  \n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches... all you need to do is to sign up!</p>\n        <div class=\"text-center\">\n            <button  (click)=\"regiserToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\n        </div>\n    </div>\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <!--[usersFromHomeComponent]=\"users\"--> <!-- sending data to the child -->\n                <app-register  (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>  ","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_services/members.service\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MemberDtailedResolever implements Resolve<Member>{\r\n\r\n    constructor(private memberService: MembersService){\r\n\r\n    }\r\n    resolve(route: ActivatedRouteSnapshot):Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n    \r\n}\r\n","export interface Pagination {\r\n    currentPage:    number;\r\n    itemsPerPage:   number;\r\n    totalItems:     number;\r\n    totalPages:     number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n     let currentUser : User;\n     // what take does is saying that we want to complate after we've received one of these current users. \n     this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n     if(currentUser){\n       request = request.clone({\n         setHeaders:{\n            Authorization:`Bearer ${currentUser.token}`\n         }\n       });\n     }\n    return next.handle(request);\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"btn-group\" name='container'>\n            <button class=\"btn btn-primary\" btnRadio=\"Unread\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n             <i class=\"fa fa-envelope\"> Unread Messages</i>  \n            </button>\n    \n            <button class=\"btn btn-primary\" btnRadio=\"Inbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n                <i class=\"fa fa-envelope-open\"> Inbox Messages</i>  \n            </button>\n    \n            <button class=\"btn btn-primary\" btnRadio=\"Outbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n                <i class=\"fa fa-paper-plane\"> Outbox Messages</i>  \n            </button>\n        </div>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"messages?.length === 0\">\n        <h3>No messages</h3>\n    </div>\n    \n    <div class=\"row\" *ngIf=\"messages?.length > 0 \">\n        <table class=\"table table-hover\" style=\"cursor: pointer;\">\n            <tr>\n                <th style=\"width: 40%\"> Message</th>\n                <th style=\"width: 20%\"> From / To</th>\n                <th style=\"width: 20%\"> Sent / Received</th>\n                <th style=\"width: 20%\"></th>\n            </tr>\n            <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \n                 routerLink='{{container === \"Qutbox\" \n                    ? \"/members/\"+message.recipientUsername \n                    : \"/members/\"+ message.recipientUsername}}' [queryParams]='{tab:3}'> \n                <td>{{message.content}}</td>\n                <td>\n                    <div *ngIf=\"container === 'Outbox'\">\n                        <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.ping'}}\" \n                        alt=\"{{message.recipientUsername}}\">\n                        <strong>{{message.recipientUsername | titlecase}}</strong>\n                    </div>\n    \n                    <div *ngIf=\"container !== 'Outbox'\">\n                        <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.senderPhotoUrl || './assets/user.ping'}}\" \n                        alt=\"{{message.senderUsername}}\">\n                        <strong>{{message.senderUsername | titlecase}}</strong>\n                    </div>\n    \n                </td>\n                <td>{{message.messageSent | timeago}}</td>\n                <td>\n                    <button (click)=\"$event.stopPropagation()\" class=\"delete btn btn-danger\" (click)=\"deleteMessage(message.id)\">Delete</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n    <div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n        <pagination \n            [boundaryLinks]=\"true\" \n            [totalItems]=\"pagination.totalItems\"\n            [itemsPerPage]=\"pagination.itemsPerPage\"\n            [(ngModel)]=\"pagination.currentPage\"\n            (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" \n            nextText=\"&rsaquo;\" \n            firstText=\"&laquo;\" \n            lastText=\"&raquo;\">\n    </pagination>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages(){\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe( response =>{\n        this.messages = response.result;\n        this.pagination = response.pagination;\n        this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number){\n     this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n       if(result){\n        this.messageService.deleteMessage(id).subscribe(() =>{\n          this.messages.splice(this.messages.findIndex( m=> m.id === id), 1);\n        });\n       }\n     })\n     /*\n    this.messageService.deleteMessage(id).subscribe(() =>{\n      this.messages.splice(this.messages.findIndex( m=> m.id === id), 1);\n    });*/\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, formatCurrency } from '@angular/common';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    MDBBootstrapModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n    NgbModule\n    \n   \n\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    NgxSpinnerModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    MDBBootstrapModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule,\n    NgbModule\n   \n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error =>{\n          if(error){\n            switch(error.status){\n                case 400:\n                  if(error.error.errors){\n                    const modalStateErrors = [];\n                    for(const key in error.error.errors){\n                      if(error.error.errors[key]){\n                        modalStateErrors.push(error.error.errors[key]);\n                      }\n                    }\n                    throw modalStateErrors.flat();\n                  }else if(typeof(error.error) === 'object'){\n                    this.toastr.error(error.statusText, error.status);\n                  }else{\n                      this.toastr.error(error.error, error.status);\n                  }\n                  break;\n                case 401:\n                    this.toastr.error(error.statusText, error.status);\n                  break;\n                case 404:\n                   this.router.navigateByUrl('/not-found');\n                  break;\n                case 500:\n                    const navigationExtras : NavigationExtras = {state: {error: error.error}}\n                    this.router.navigateByUrl('/server-error', navigationExtras);\n                  break;\n                default:\n                  this.toastr.error('Something unexpected went wrong');\n                  break;\n            }\n          }\n          return throwError(error);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService : AccountService, private toastr: ToastrService){}\n  canActivate(): Observable<boolean> {\n   return  this.accountService.currentUser$.pipe(\n      map(user =>{\n        if(user.roles.includes(\"Admin\") || user.roles.includes(\"Moderator\")) return true;\n        this.toastr.error(\"You cannot enter this area.\");\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]){\n      return this.http.post(`${this.baseUrl}admin/edit-roles/${username}?roles=${roles}`, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  users: Partial<User[]>\n  bsModalRef : BsModalRef;\n  constructor(private adminservice : AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles(){\n    this.adminservice.getUsersWithRoles().subscribe(users =>{\n        this.users = users;\n    })\n  }\n\n  openRolesModal(user: User){\n    const config ={ \n        class:'model-dialog-centered',\n        initialState:{\n          user,\n          roles: this.getRolesArray(user)\n        }\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values =>{\n      const rolesToUpdate = {\n         roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if(rolesToUpdate){\n        this.adminservice.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(()=>{\n            user.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user: User){\n      const roles= [];\n      const userRoles =  user.roles;\n      const availavleRoles: any[] = [\n        {name: 'Admin', value: 'Admin'},\n        {name: 'Moderator', value: 'Moderator'},\n        {name: 'Member', value: 'Member'},\n      ];\n\n      availavleRoles.forEach(role =>{\n        let isMatch = false;\n        for(const userRole of userRoles){\n            if(role.name === userRole){\n              isMatch = true;\n              role.checked = true;\n              roles.push(role);\n            }\n        }\n\n        if(!isMatch){\n            role.checked = false;\n            roles.push(role);\n        }\n\n      })\n\n      return roles;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <table class=\"table\">\n            <tr>\n                <th style=\"width: 30%;\">Username</th>\n                <th style=\"width: 40%;\">Active roles</th>\n                <th style=\"width: 30%;\"></th>\n            </tr> \n            <tr *ngFor=\"let user of users\">\n                <td>{{user.username}}</td>\n                <td>{{user.roles}}</td>\n                <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info edit\">Edit Roles</button></td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n  canActivate(): Observable<boolean>{\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n          if(user) return true;\n          this.toastr.error('You shall not pass!')\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder} from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginationHeaders, getPaginatedResult } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl  = environment.hubUrl; \n  private hubConnection: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User, otherUsername: string){\n    this.hubConnection = new HubConnectionBuilder().withUrl(`${this.hubUrl}message?user=${otherUsername}`,{\n      accessTokenFactory: () => user.token\n    }).withAutomaticReconnect().build();\n\n    this.hubConnection.start().catch(error => console.log(\"this is the error \" + error));\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    })\n\n    this.hubConnection.on(\"NewMessage\", message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message])\n      })\n    })\n\n    this.hubConnection.on('UpdatedGroup',(group: Group) => {\n      if(group.connections.some(x => x.username === otherUsername)){\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(messages =>{\n              if(!messages.dateRead){\n                messages.dateRead = new Date(Date.now());\n              }\n            })\n            this.messageThreadSource.next([...messages]);\n        })\n      }\n    })\n  }\n\n  stopHubConnection(){\n    if(this.hubConnection)\n        this.hubConnection.stop();\n  }\n\n  getMessages(pageNumber, pageSize, container){\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string){\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string){\n   // return this.http.post<Message>(`${this.baseUrl}messages`, {recipientUsername: username, content});\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\n    .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number){\n    return this.http.delete(`${this.baseUrl}messages/${id}`);\n  }\n  \n}\n","import { PathLocationStrategy } from '@angular/common';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-details',\n  templateUrl: './member-details.component.html',\n  styleUrls: ['./member-details.component.css']\n})\nexport class MemberDetailsComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  activeTab: TabDirective;\n  member: Member;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  messages : Message[] = [];\n  user : User;\n\n  constructor(private memberService : MembersService, private route: ActivatedRoute, \n    private toastr : ToastrService, private messageService: MessageService, \n    public presence : PresenceService, private accountService : AccountService, private router: Router) { \n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {this.user = user;})\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n \n  ngOnInit(): void {\n\n    //calling the resolver to load the data be for the html template loads \n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n    this.route.queryParams.subscribe(params =>{\n      //console.log(\"this is the value of the tab: \",params.tab);\n      params.tab ? this.selectTab(params.tab): this.selectTab(0);\n    })\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent:100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      },\n     ];\n     this.galleryImages = this.getImages(); \n  }\n\n\n  getImages(): NgxGalleryImage[]{\n    const imagesUrls= [];\n    for(const photo of this.member.photos){\n      imagesUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    } \n    return imagesUrls;\n  }\n  \naddLike(member: Member){\n    this.memberService.addLike(member.username).subscribe(() =>{\n      this.toastr.success(`You have liked ${member.knownAs}`);\n    });\n}\n\n\nloadMessages(){\n  this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n    this.messages = messages;\n  })\n}\nonTabActivated(data: TabDirective){\n    this.activeTab = data;\n    if(this.activeTab.heading === 'Messages' && this.messages.length === 0){\n        this.messageService.createHubConnection(this.user, this.member.username);\n    }else{\n      this.messageService.stopHubConnection();\n    }\n}\n\nselectTab(tabId: number){\n  this.memberTabs.tabs[tabId].active = true;\n}\n\nngOnDestroy(): void {\n  this.messageService.stopHubConnection();\n}\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <div class=\"card\">\n                <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\n    \n                <div class=\"card-body\">\n                    <div class=\"mb-2\" *ngIf=\"(presence.onlineUser$ | async).includes(member.username)\">\n                        <i class=\"fa fa-user-circle text-success online\"></i> Online now\n                    </div>\n                    <div>\n                        <strong>Location: </strong>\n                        <p>{{member.city}}, {{member.country}}</p>\n                    </div>\n    \n                    <div>\n                        <strong>Age: </strong>\n                        <p>{{member.age}}</p>\n                    </div>\n    \n                    <div>\n                        <strong>Last active: </strong>\n                        <p>{{member.lastActive | timeago}}</p>\n                    </div>\n    \n                    <div>\n                        <strong>Member since: </strong>\n                        <p>{{member.created | date: 'longDate'}}</p>\n                    </div>\n                </div>\n    \n                <div class=\"card-footer\">\n                    <div class=\"btn-group d-flex\">\n                        <button class=\"btn btn-primary\" (click)=\"addLike(member)\">Like</button>\n                        <button class=\"btn btn-success\" (click)=\"selectTab(3)\">Message</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"col-8\">\n            <tabset class=\"member-tabset\" #memberTabs>\n                <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\n                    <h4>Description</h4>\n                    <p>{{member.introduction}}</p>\n                    <h4>Looking for</h4>\n                    <p>{{member.lookingFor}}</p>\n                </tab>\n    \n                <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\n                    <h4>Interests</h4>\n                    <p>{{member.interests}}</p>\n                </tab>\n    \n                <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\n                    <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n                </tab>\n    \n                <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\n                   <app-member-messages [username]=\"member.username\"></app-member-messages>\n                </tab>\n            </tabset>\n        </div>\n    </div>\n</div>\n\n","<div class=\"container-sm\">\n  <div class=\"text-center mt-3\">\n      <h2>Your matches - {{pagination?.totalItems}} found</h2>\n  </div>\n  <div class=\"container mt-3\">\n      <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n          <div class=\"form-group\">\n              <label>Age from:</label>\n              <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\n          </div>\n\n          <div class=\"form-group px-2\">\n            <label>Age to:</label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n          <label>Show: </label>\n          <select name=\"gender\" style=\"width:130px;\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.gender\">\n              <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">{{gender.display}}</option>\n          </select>\n        </div>\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n        <button class=\"btn btn-info ml-1\" type=\"submit\" (click)=\"resetFilters()\">Reset Filters</button>\n        <div class=\"col\">\n          <div class=\"btn-group float-right\">\n         \n            <button class=\"btn btn-primary\" name='orderBy'  type=\"button\"\n            [(ngModel)]=\"userParams.orderBy\" (click)=\"loadMembers()\" \n            btnRadio='lastActive'> Last Active</button>\n            <button class=\"btn btn-primary\" name='orderBy'  type=\"button\"\n            [(ngModel)]=\"userParams.orderBy\" (click)=\"loadMembers()\" \n            btnRadio='created'> Newest Members</button>\n  \n          </div>\n        </div>\n      </form>\n    \n  </div>\n  \n  <div class=\"row\"> \n    <div class=\"row align-items-start\">\n        <div class=\"col-sm-4 \" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n       </div>\n    </div>\n  </div>\n  <div clas=\"d-flex justify-content-center col-xs-1 center-block\" *ngIf=\"pagination\" \n  style=\"width: 50%; margin-left: auto; margin-right: auto;\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n //$ menas that the varaiable is observable \n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList= [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n\n  constructor(private membersService: MembersService) { \n    this.userParams = this.membersService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers(){\n    this.membersService.setUserParams(this.userParams);\n    this.membersService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters(){\n    this.userParams = this.membersService.resestUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any){\n    this.userParams.pageNumber = event.page;\n    this.membersService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { User } from './_models/user';\r\nimport {AccountService} from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating app';\r\n  users : any; //data type can be anything.\r\n  constructor(private http: HttpClient, private accountService: AccountService, private presence : PresenceService){}\r\n\r\n  ngOnInit(){\r\n   // this.getUsers();\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser(){\r\n    const user : User = JSON.parse(localStorage.getItem('user'));\r\n    if(user){\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n   \r\n  }\r\n  getUsers(){\r\n    this.http.get(environment.apiUrl+'users').subscribe(reponse => {\r\n      this.users = reponse;\r\n\r\n    }, error=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n","\r\n<ngx-spinner> <h3>Loading...</h3></ngx-spinner>\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container-fluid\" style=\"margin-top: 100px;\">\r\n  <router-outlet></router-outlet> \r\n  <ul>\r\n    <li *ngFor='let user of users'>{{user.id}} - {{user.userName}}</li>\r\n  </ul>\r\n  \r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService : BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      finalize(()=> {this.busyService.idle();})\n    )\n  }\n}\n","import { HttpClient, HttpHeaderResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of, pipe } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\nimport {Member} from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members : Member[] = [];\n  membersCache = new Map();\n  user : User;\n  userParams : UserParams;\n  constructor(private http: HttpClient, private accountService : AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe( user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n   })\n  }\n\n  getUserParams(){\n    return this.userParams;\n  }\n  setUserParams(params: UserParams){\n    this.userParams = params;\n  }\n\n  resestUserParams(){\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n  getMembers(userParams : UserParams){\n      \n     console.log(Object.values(userParams).join('_'));\n     let params =  getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n     var response = this.membersCache.get(Object.values(userParams).join('-'));\n\n     if(response){\n       return of(response);\n     }\n\n\n     params = params.append('minAge', userParams.minAge.toString());\n     params = params.append('maxAge', userParams.maxAge.toString());\n     params = params.append('gender', userParams.gender);\n     params = params.append('orderBy', userParams.orderBy);\n     return getPaginatedResult<Member[]>(`${this.baseUrl}users`, params, this.http).pipe(map(response =>{\n        this.membersCache.set(Object.values(userParams).join('-'), response);\n        return response;\n     }))\n  }\n\n  getMember(username: string){\n    const member = [...this.membersCache.values()]\n    .reduce((arr, elem) => arr.concat(elem.result), [])\n    .find((member: Member) => member.username === username); // it returns the first instance of a member\n    if(member){\n      return of(member);\n    }\n    return this.http.get<Member>(`${this.baseUrl}users/${username}`);\n  }\n\n  updateMember(member: Member){\n      return this.http.put(`${this.baseUrl}users`, member).pipe(\n        map(() => {\n            const index = this.members.indexOf(member);\n            this.members[index] = member;\n            console.log(this.members[index]);\n        })\n      )\n  }\n\n  setMainPhoto(photoId : number){\n      return this.http.put(`${this.baseUrl}users/set-main-photo/${photoId}`, {});\n  }\n  deletePhoto(photoId: number){\n    return this.http.delete(`${this.baseUrl}users/delete-photo/${photoId}`);\n  }\n\n  addLike(username: string){\n      return this.http.post(`${this.baseUrl}likes/${username}`,{});\n  }\n\n  getLikes(predicate: string, pageNumber, pageSize){\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(`${this.baseUrl}likes`, params, this.http);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailsComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    //multi: true, it helps with adding our interceptor to angular default interceptor\r\n    {provide : HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide : HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n    {provide : HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input () member : Member;\n\n  user: User;\n\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  constructor(private accountService : AccountService, private memberService : MembersService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n   }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any){\n    this.hasBaseDropzoneOver = e;\n  }\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: `Bearer ${this.user.token}`,\n      isHTML5: true,\n      allowedFileType:['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024 // 10 GB\n    });\n\n    this.uploader.onAfterAddingFile = (file) =>{\n      file.withCredentials = false;\n    }\n    this.uploader.onSuccessItem=(item, response, status, headers) =>{\n      if(response){\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain)\n        {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n  setMainPhoto(photo: Photo){\n    this.memberService.setMainPhoto(photo.id).subscribe(()=>{\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach( p =>{\n          if(p.isMain)  p.isMain = false;\n          if(p.id == photo.id) p.isMain = true;\n      })\n    })\n  }\n\n\n  deletePhoto(photoId: number){\n    this.memberService.deletePhoto(photoId).subscribe( ()=>{\n        this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\"> \n        <img src={{photo.url}} alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"text-center\">\n            <button \n            [disabled]=\"photo.isMain\" \n            [ngClass]='photo.isMain ? \"btn-success active\" :\" btn-outline-sucess\" '\n            class=\"btn btn-sm\" (click)=\"setMainPhoto(photo)\">Main</button>\n            <button [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\"\n            class=\"btn btn-sm btn-danger\"> <i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>Select files</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photo here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>","export const environment = {\r\n  production: true,\r\n  apiUrl: 'api/',\r\n  hubUrl: 'hubs/'\r\n};\r\n","<div class=\"form-group\">\n    <input [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    type={{type}} class=\"form-control me-2\" [formControl]=\"ngControl.control\" placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">please enter a {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\"> Passwords do not match</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n   }\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n\n  }\n  registerOnTouched(fn: any): void {\n   \n  }\n\n\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" \n            [(ngModel)]=\"predicate\" (click)=\"loadLikes()\"> Members I like</button>\n\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" \n            [(ngModel)]=\"predicate\" (click)=\"loadLikes()\"> Members who like me</button>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-4\" *ngFor=\"let member of members\"> \n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n\n    <div clas=\"d-flex justify-content-center col-xs-1 center-block\" *ngIf=\"pagination\" \n  style=\"width: 50%; margin-left: auto; margin-right: auto;\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n                [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\"\n            previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members : Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize   = 5;\n  pagination: Pagination; \n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes(){\n      this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response =>{\n        this.members = response.result;\n        this.pagination = response.pagination;\n      })\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\n      <button class=\"navbar-toggler\" type=\"button\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div [ngbCollapse]=\"isNavbarCollapsed\" class=\"navbar-collapse\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-md-0\" >\n           <ng-container *ngIf=\"accountService.currentUser$ | async\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" aria-current=\"page\" routerLink=\"/members\" routerLinkActive='active'>Matches</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/lists\"  routerLinkActive='active'>Lists</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link \" routerLink=\"/messages\"  routerLinkActive='active'>Messages</a>\n              </li>\n              <li class=\"nav-item\" *appHasRole='[\"Admin\", \"Moderator\"]'>\n                <a class=\"nav-link \" routerLink=\"/admin\"  arouterLinkActive='active'>Admin</a>\n              </li>\n           </ng-container>\n           <li class=\"nav-item\">\n               <a class=\"nav-link \" routerLink=\"/errors\"  routerLinkActive='active'>errors</a>\n          </li>\n        </ul>\n            <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n              <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt={{user.username}} >\n                <a class=\"dropdown-toggle text-light\" dropdownToggle> Welcome {{user.knownAs || user.username | titlecase}}</a>\n                <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                    <a class=\"dropdown-item\" routerLink=\"/member/edit\"> Edit Profile</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" (click) = \"logout()\"> Logout</a>\n                    <a class=\"dropdown-item\" (click) = \"logout()\"> Logout</a>\n                </div>\n            </div>\n            <div *ngIf=\"(accountService.currentUser$ | async) === null\" style=\"margin-left:5cm;\">\n                <form #loginForm=\"ngForm\" class=\"d-flex\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n                    <input \n                        name=\"username\"\n                        [(ngModel)] = \"model.username\"\n                        class=\"form-control mr-sm-2\" \n                        type=\"text\" \n                        placeholder=\"Username\">\n                    <input \n                        name=\"password\"\n                        [(ngModel)] = \"model.password\"\n                        class=\"form-control mr-sm-2\" \n                        type=\"password\" \n                        placeholder=\"Password\">\n                    <button class=\"btn btn-success\" type=\"submit\">Login</button>\n                  </form>\n            </div>\n      </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport {AccountService} from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model : any = {} \n  isNavbarCollapsed = true;\n  constructor(public accountService : AccountService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n     console.log(this.model);\n      this.accountService.login(this.model).subscribe(response => {\n       this.router.navigateByUrl('/members');\n     }, error=>{\n        console.log(error);\n        this.toastr.error(error.error);\n     });\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css'],\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input () member: Member; \n  constructor(private memberService: MembersService, private toastr: ToastrService, public presence : PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member: Member){\n      this.memberService.addLike(member.username).subscribe(() =>{\n        this.toastr.success(`You have liked ${member.knownAs}`);\n      });\n  }\n\n}\n","<div class=\"card mb-4\" style=\"width: 18rem;\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" class=\"card-img-top zindex-popover\" alt=\"{{member.knownAs}}\">\n        <ul class=\"list-inline member-icon animate text-center\">\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\" routerLink='/members/{{member.username}}'>\n                <i class=\"fa fa-user\"></i></button></li>\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)='addLike(member)'>\n                <i class=\"fa fa-heart\"></i></button></li>\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\"\n                 routerLink='/members/{{member.username}}' [queryParams]='{tab:3}'>\n                <i class=\"fa fa-envelope\"></i></button></li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUser$ | async).includes(member.username)\">\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            {{member.knownAs}}, {{member.age}}</h6>\n      <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUserSource = new BehaviorSubject<string[]>([]);\n  onlineUser$ = this.onlineUserSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User){\n    this.hubConnection = new HubConnectionBuilder().withUrl(this.hubUrl + 'presence', {\n      accessTokenFactory: () => user.token\n    }).withAutomaticReconnect() // if there network problem the clinet will try to re-connect\n    .build();\n\n    this.hubConnection.start().catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username=>{\n     this.onlineUser$.pipe(take(1)).subscribe(usernames => {\n       this.onlineUserSource.next([...usernames, username])\n     })\n    })\n\n    this.hubConnection.on('UserIsOffline', username =>{\n        this.onlineUser$.pipe(take(1)).subscribe(usernames => {\n          this.onlineUserSource.next([...usernames.filter(x => x !== username)])  // remove the user from the online users \n        })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (username: string[]) =>{\n      this.onlineUserSource.next(username);\n    })\n\n    this.hubConnection.on('NewMessageReceived',({username, knownAs}) => {\n      this.toastr.info(knownAs + 'has sent you a new message!')\n      .onTap.pipe(take(1)).subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class UserParams{\r\n    gender : string;\r\n    minAge      = 18;\r\n    maxAge      = 99;\r\n    pageNumber  = 1;\r\n    pageSize    = 5;\r\n    orderBy     = 'lastActive';\r\n\r\n    constructor(user : User){\r\n        this.gender  = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class=\"container\">\n   <h2>Admin Panel</h2>\n    <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n            <tab heading=\"User management\" *appHasRole='[\"Admin\"]'>\n                <div class=\"container\">\n                    <app-user-management></app-user-management>\n                </div>\n            </tab>\n            <tab heading=\"Photo management\" *appHasRole='[\"Admin\", \"Moderator\"]'>\n                <div class=\"container\">\n                    <app-photo-management></app-photo-management>\n                </div>\n            </tab>\n        </tabset>\n    \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm; // access the value for html element\n  member : Member;\n  user : User;\n  // allow us to access the browser window \n  @HostListener ('window:beforeunload', ['$event']) unloadNotification($event: any){\n      if(this.editForm.dirty){\n        $event.returnValue = true;\n      }\n  }  \n  constructor(private accountService : AccountService, private memberService: MembersService, private toastr: ToastrService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {this.user = user});\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember(){\n    this.memberService.getMember(this.user.username).subscribe(member => {\n       this.member = member;\n       console.log(this.member);\n    })\n  }\n\n  updateMember(){\n    this.memberService.updateMember(this.member).subscribe(() =>{\n      console.log(this.member);\n      this.toastr.success('Profile has been updated successfully');\n      //reset the form state \n      this.editForm.reset(this.member);\n    })\n\n  }\n}\n","\n<div *ngIf=\"member\" class=\"container-fuid\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <h1>Your profile</h1>\n        </div>\n        <div class=\"col-8\">\n            <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n                <strong>Information: </strong> You have made changes. Any unsaved changes will be lost\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\n\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location: </strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n\n                <div>\n                    <strong>Age: </strong>\n                    <p>{{member.age}}</p>\n                </div>\n\n                <div>\n                    <strong>Last active: </strong>\n                    <p>{{member.lastActive| timeago}}</p>\n                </div>\n\n                <div>\n                    <strong>Member since: </strong>\n                    <p>{{member.created | date :'longDate'}}</p>\n                </div>\n            </div>\n\n            <div class=\"card-footer\">\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">Save</button>\n            </div>\n        </div>\n      </div>\n      <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\" id=\"editForm\"> \n                    <h4>Description</h4>\n                    <textarea  style=\"height: 121px;\" class=\"form-control\" [(ngModel)]=\"member.introduction\"  name=\"introduction\" row=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea  style=\"height: 121px;\" class=\"form-control\" [(ngModel)]=\"member.lookingFor\"  name=\"lookingFor\" row=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea style=\"height: 121px;\" class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" row=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details</h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\"> City: </label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\"> \n                        <label for=\"country\"> Country: </label>\n                        <input type=\"text\" [(ngModel)]=\"member.country\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n            </tab>\n\n            <tab heading='Edit Photos'>\n               <app-photo-editor [member] = \"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n      </div>\n    </div>\n  </div>","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') != null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export  function getPaginationHeaders(pageNumber: number, pageSize: number){\r\n    let params = new HttpParams();\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n    return params;\r\n  }","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confrimService: ConfirmService){}\n  canDeactivate(component: MemberEditComponent) : Observable<boolean> | boolean {\n    if(component.editForm.dirty){\n      // this will give them an option to say yes or no, and if they click yes, then it will return true.\n     // return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\n       return this.confrimService.confirm();\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n \n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean; \n  \n  constructor(public bsModelRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result = true;\n    this.bsModelRef.hide();\n  }\n\n  decline(){\n    this.result = false;\n    this.bsModelRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n    <p>{{message}}</p>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n</div>","import { NgModule, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDtailedResolever } from './_resolvers/member-detailed.resover';\r\n\r\nconst routes: Routes = [\r\n  {path:'', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate:[AuthGuard],\r\n    children:[\r\n      {path:'members', component: MemberListComponent},\r\n      {path:'members/:username', component: MemberDetailsComponent, resolve:{member: MemberDtailedResolever}},\r\n      {path:'member/edit', component: MemberEditComponent, canDeactivate:[PreventUnsavedChangesGuard]},\r\n      {path:'lists', component: ListsComponent},\r\n      {path:'messages', component: MessagesComponent},\r\n      {path:'admin', component: AdminPanelComponent, canActivate:[AdminGuard]}\r\n    ]\r\n  },\r\n  {path:'server-error', component: ServerErrorComponent},\r\n  {path:'not-found', component: NotFoundComponent},\r\n  {path: 'errors', component: TestErrorsComponent},\r\n  {path:'**', component: HomeComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', \n    message = 'Are you sure you want to do this?', \n    btnOkText = 'Ok', \n    btnCancelText = 'Cancel'): Observable<boolean> {\n      const config = {\n        initialState: {\n          title, \n          message,\n          btnOkText,\n          btnCancelText\n        }\n      }\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n    \n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n  }\n}","import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n\n  @Input () updateSelectedRoles = new EventEmitter();\n  user : User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles(){\n    this.updateSelectedRoles.emit(this.roles);\n   this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n                class=\"form-check-input\"\n                [checked]=\"role.checked\"\n                value=\"role.name\"\n                (change)=\"role.checked = ! role.checked\"\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n            >\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}